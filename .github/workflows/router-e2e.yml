name: Router Maestro E2E

on:
  pull_request:
    paths:
      - packages/@expo/cli/**
      - packages/expo-router/**

jobs:
  router-maestro:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-workspace: 'true'

      - name: Install dependencies
        run: YARN_IGNORE_SCRIPTS=true yarn --frozen-lockfile

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Maestro
        run: |
          export MAESTRO_VERSION=1.36.0
          curl -Ls "https://get.maestro.mobile.dev" | bash
          arch -arm64 brew tap facebook/fb
          arch -arm64 brew install facebook/fb/idb-companion
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Start iOS Simulator
        run: |
          # Find a simulator by name (e.g., iPhone 15)
          DEVICE_NAME="iPhone 15 Pro"
          DEVICE_ID=$(xcrun simctl list devices available --json | jq -r --arg DEVICE_NAME "$DEVICE_NAME" '.devices[] | .[] | select(.name == $DEVICE_NAME) | .udid' | head -n 1)
          DEVICE_STATE=$(xcrun simctl list devices available --json | jq -r --arg DEVICE_ID "$DEVICE_ID" '.devices[] | .[] | select(.udid == $DEVICE_ID) | .state')

          if [ -z "$DEVICE_ID" ]; then
            echo "No available simulator found for the criteria."
            exit 1
          fi

          if [ "$DEVICE_STATE" != "Booted" ]; then
            # Boot the simulator if it's not already booted
            xcrun simctl boot "$DEVICE_ID"
            # Wait a bit for the simulator to boot
            sleep 30
          else
            echo "Simulator with DEVICE_ID=$DEVICE_ID is already booted."
          fi

      - name: Build Expo CLI
        run: yarn workspace @expo/cli prepare

      - name: Start Expo CLI
        working-directory: apps/router-e2e
        env:
          E2E_ROUTER_USE_PUBLISHED_EXPO_GO: true
        run: |
          # Run the Expo Dev Server in the background
          node ../../packages/@expo/cli/build/bin/cli start --ios &
          sleep 10
          # Start the build early
          BUNDLE_URL=$(curl  -H "Content-Type: multipart/mixed" -H "expo-platform: ios" http://localhost:8081 | jq -r ".launchAsset.url")
          curl $BUNDLE_URL

      - name: Run Maestro iOS tests
        working-directory: apps/router-e2e
        env:
          MAESTRO_DRIVER_STARTUP_TIMEOUT: 120000
        run: |
          # Run the Expo Dev Server in the background
          maestro test launch-tests.yml --no-ansi --format=junit
